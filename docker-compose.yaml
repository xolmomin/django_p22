services:
  django_service:
    build:
      context: .
      dockerfile: deploy/django/Dockerfile
    command: python3 manage.py runserver 0:8042
    ports:
      - 8000:8042
    volumes:
      - static_volume_p22:/app/static
      - media_volume_p22:/app/media
    env_file: .env
    depends_on:
      - postgres_service

  celery_service:
    build:
      context: .
      dockerfile: deploy/django/Dockerfile
    command: /celery
    volumes:
      - static_volume_p22:/app/static
      - media_volume_p22:/app/media
    env_file: .env
    depends_on:
      - postgres_service
      - redis_service

  celery_beat_service:
    build:
      context: .
      dockerfile: deploy/django/Dockerfile
    command: /celery-beat
    volumes:
      - static_volume_p22:/app/static
      - media_volume_p22:/app/media
    env_file: .env
    depends_on:
      - postgres_service
      - redis_service

  flower_service:
    build:
      context: .
      dockerfile: deploy/django/Dockerfile
    command: /flower
    volumes:
      - static_volume_p22:/app/static
      - media_volume_p22:/app/media
    env_file: .env
    ports:
      - 5001:5001
    depends_on:
      - postgres_service
      - redis_service
      - celery_service
#
#  minio:
#    image: minio/minio
#    ports:
#      - '9000:9000'
#      - '9001:9001'
#    env_file: env/.env
#    command: server /data --console-address :9001
#    volumes:
#      - minio_data:/data
#
#  rabbitmq:
#    image: rabbitmq:management
#    environment:
#      - RABBITMQ_DEFAULT_USER=guest
#      - RABBITMQ_DEFAULT_PASS=guest
#    ports:
#      - '5672:5672'
#      - '15672:15672'
#
#  mongodb:
#    image: mongo:latest
#    ports:
#      - '27017:27017'
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: rootpassword
#    volumes:
#      - mongodb_data:/data/db

  postgres_service:
    image: postgres:alpine
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    #    ports:
    #      - 5439:${PG_PORT}
    volumes:
      - pg_data_p22:/var/lib/postgresql/data

  redis_service:
    image: redis:alpine
    #    ports:
    #      - 6380:6379
    volumes:
      - redis_data_p22:/data
#
#  nginx:
#    build:
#      context: .
#      dockerfile: ./compose/nginx/Dockerfile
#    ports:
#      - '80:80'
#      - '443:443'
#    depends_on:
#      - web_service
#    logging:
#      options:
#        max-size: '10m'
#        max-file: '3'
#    volumes:
#      - static_volume:/app/static
#      - media_volume:/app/media

volumes:
  pg_data_p22:
  static_volume_p22:
  media_volume_p22:
  redis_data_p22:
